services:
  # PostgreSQL database
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: mlflow_user
      POSTGRES_PASSWORD: mlflow_pass
      POSTGRES_DB: mlflowdb
    ports:
      - "5432:5432"
    volumes:
      - ./postgres-data:/var/lib/postgresql/data

  # MinIO server
  minio:
    image: minio/minio
    environment:
      MINIO_ROOT_USER: minio_user
      MINIO_ROOT_PASSWORD: minio_pass
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./minio-data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://minio:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # إنشاء bucket mlflow إذا غير موجود
  minio-create-bucket:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      echo 'Waiting for MinIO to be ready...';
      for i in $(seq 1 20); do
        mc alias set minio http://minio:9000 minio_user minio_pass && break || sleep 3;
      done;
      if ! mc ls minio/mlflow; then
        mc mb minio/mlflow;
      else
        echo 'Bucket mlflow already exists';
      fi
      "

  # MLflow server
  mlflow-server:
    build: .
    ports:
      - "5000:5000"
    environment:
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
      AWS_ACCESS_KEY_ID: minio_user
      AWS_SECRET_ACCESS_KEY: minio_pass
    command: >
      mlflow server
      --backend-store-uri postgresql://mlflow_user:mlflow_pass@postgres:5432/mlflowdb
      --default-artifact-root s3://mlflow/artifacts
      --host 0.0.0.0
      --port 5000
      --serve-artifacts
    depends_on:
      - postgres
      - minio-create-bucket
